name: Test and Deploy

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  unit_test_backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop
    - name: Set up MariaDB
      uses: getong/mariadb-action@v1.1
      with:
        mysql database: compair
        mysql root password: ''
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements.dev.txt
    - name: Backend Unit Tests MariaDB
      run: |
        nosetests DATABASE_URI="mysql+pymysql://root@localhost/compair"
    - name: Backend Unit Tests SQLite
      run: |
        nosetests DATABASE_URI="sqlite:///:memory:"

  unit_test_frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        version: 12
    - name: Install dependencies
      run: |
        npm install
        node_modules/gulp/bin/gulp.js
    - name: Frontend Karma Tests
      run: |
        node_modules/karma/bin/karma start compair/static/test/config/karma.conf.js --single-run --browsers PhantomJS

  deploy_assets:
    runs-on: ubuntu-latest
    needs: [unit_test_backend, unit_test_frontend]
    # only deploy master and tagged releases
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        version: 12
    - name: Install dependencies
      run: |
        npm install
        node_modules/gulp/bin/gulp.js
    - uses: shallwefootball/s3-upload-action@master
      name: Upload S3
      id: S3
      with:
        aws_key_id: ${{ secrets.AWS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_bucket: compair-assets
        source_dir: compair/static/dist
        destination_dir: dist

  deploy_docker_image:
    runs-on: ubuntu-latest
    needs: [unit_test_backend, unit_test_frontend]
    # only deploy master and tagged releases
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ubcctlt/compair-app
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: latest
        tag_names: true